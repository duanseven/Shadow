//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.269
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NSun.Data.Test
{
    using System;
    using NSun.Data;
    using System.Collections.Generic;

    [System.SerializableAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UsersEntity : NSun.Data.BaseEntity
    {
        private int id;
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int Id
        {
            get { return id; }
            set { id = value; }
        }

        private string name;
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual string Name
        {
            get { return name; }
            set { name = value; }
        }

        private string pass;
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual string Pass
        {
            get { return pass; }
            set { pass = value; }
        }

        private System.Nullable<System.DateTime> logintime;
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual System.Nullable<System.DateTime> Logintime
        {
            get { return logintime; }
            set { logintime = value; }
        }

        private NSun.Data.Collection.List<BookEntity> useres_book;

        public virtual NSun.Data.Collection.List<BookEntity> Useres_book
        {
            get { return useres_book; }
            set { useres_book = value; }
        }

        private UserInfoEntity usersinfo;

        public virtual UserInfoEntity Usersinfo
        {
            get { return usersinfo; }
            set { usersinfo = value; }
        }

        public virtual NSun.Data.Collection.List<BookEntity> books { get; set; }
    }

    [NSun.Data.TableAttribute("USERS")]
    public partial class UsersEntity
    {
        public static NSun.Data.IdQueryColumn _id;

        public static NSun.Data.QueryColumn _name;

        public static NSun.Data.QueryColumn _pass;

        public static NSun.Data.VersionQueryColumn _logintime;

        //Relation 主键配置  一对多配置
        private static NSun.Data.RelationQueryColumn _useres_book;

        //一对一
        private static NSun.Data.RelationQueryColumn _usersinfo;

        //多对多 
        private static RelationQueryColumn _books;
        static UsersEntity()
        {
            _id = new NSun.Data.IdQueryColumn("USERS.ID", System.Data.DbType.Int32, true);

            _name = new NSun.Data.QueryColumn("USERS.NAME", System.Data.DbType.String);

            _pass = new NSun.Data.QueryColumn("USERS.PASS", System.Data.DbType.String);

            _logintime = new NSun.Data.VersionQueryColumn("USERS.LOGINTIME", System.Data.DbType.DateTime);

            //Relation 主键配置  一对多配置
            _useres_book =
                 new RelationQueryColumn(_id, typeof(BookMapping), BookMapping._userid, RelationType.OneToMany);

            _usersinfo = new RelationQueryColumn(_id, typeof (UserInfoMapping), UserInfoMapping._userid,
                                                 RelationType.OneToOne);

            _books = new RelationQueryColumn(_id, typeof (RelationUBMapping), typeof (BookMapping),
                                             RelationUBMapping._userid, //MAPPING
                                             BookMapping._id, //MAPPINGID
                                             RelationUBMapping._bookid, //OutMaPPING 
                                             RelationType.ManyToMany);
        }
    }

    [System.SerializableAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    [NSun.Data.TableMapping(typeof(BookMapping))]
    public class BookEntity : NSun.Data.BaseEntity
    {
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int Id { get; set; }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual string Name { get; set; }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int Userid { get; set; }

        public virtual UsersEntity Book_useres { get; set; }

        public virtual NSun.Data.Collection.List<UsersEntity> Users { get; set; }
    }

    [NSun.Data.TableAttribute("BOOK")]
    public class BookMapping
    {
        public static NSun.Data.IdQueryColumn _id;

        public static NSun.Data.QueryColumn _name;

        public static NSun.Data.QueryColumn _userid;

        //Relation 外键配置  多对一配置
        private static NSun.Data.RelationQueryColumn _book_useres;

        //多对多
        private static NSun.Data.RelationQueryColumn _users;

        static BookMapping()
        {
            _id = new NSun.Data.IdQueryColumn("BOOK.ID", System.Data.DbType.Int32, true);

            _name = new NSun.Data.QueryColumn("BOOK.NAME", System.Data.DbType.String);

            _userid = new NSun.Data.QueryColumn("BOOK.USERID", System.Data.DbType.Int32);

            //Relation 外键配置  多对一配置
            _book_useres =
                new RelationQueryColumn(_userid, typeof(UsersEntity), UsersEntity._id, RelationType.ManyToOne);

            _users = new RelationQueryColumn(_id, typeof(RelationUBMapping), typeof(UsersEntity),
                                         RelationUBMapping._bookid, //MAPPING
                                         UsersEntity._id, //MAPPINGID
                                         RelationUBMapping._userid, //OutMaPPING 
                                         RelationType.ManyToMany);
        }
    }

    [System.SerializableAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    [NSun.Data.TableMapping(typeof(UserInfoMapping))]
    public class UserInfoEntity:NSun.Data.BaseEntity
    {
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int Id { get; set; }
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int UserId { get; set; }
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual string CodeId { get; set; }
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual UsersEntity Users { get; set; }
    }
    
    [NSun.Data.TableAttribute("USERINFO")]
    public class UserInfoMapping
    {        
        public static NSun.Data.IdQueryColumn _id;

        public static NSun.Data.QueryColumn _userid;

        public static NSun.Data.QueryColumn _codeid;

        //Relation 外键配置  多对一配置
        private static NSun.Data.RelationQueryColumn _users;

        static UserInfoMapping()
        {
            _id = new NSun.Data.IdQueryColumn("USERINFO.ID", System.Data.DbType.Int32, true);

            _userid = new NSun.Data.QueryColumn("USERINFO.USERID", System.Data.DbType.Int32);

            _codeid = new NSun.Data.QueryColumn("USERINFO.CODEID", System.Data.DbType.String);

            //Relation 外键配置  多对一配置
            _users =
                new RelationQueryColumn(_userid, typeof(UsersEntity), UsersEntity._id, RelationType.OneToOne);
        }
    }

    [System.SerializableAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    [NSun.Data.TableMapping(typeof(RelationUBMapping))]
    public class RelationUB : BaseEntity
    {
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int Id { get; set; }
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int BookId { get; set; }
        [System.Runtime.Serialization.DataMemberAttribute()]
        public virtual int UserId { get; set; }        
    }
    
    [NSun.Data.TableAttribute("RELATIONUB")]
    public class RelationUBMapping
    {
        public static NSun.Data.IdQueryColumn _id;

        public static NSun.Data.QueryColumn _userid;

        public static NSun.Data.QueryColumn _bookid;         

        static RelationUBMapping()
        {
            _id = new NSun.Data.IdQueryColumn("RELATIONUB.ID", System.Data.DbType.Int32, true);

            _userid = new NSun.Data.QueryColumn("RELATIONUB.USERID", System.Data.DbType.Int32);

            _bookid = new NSun.Data.QueryColumn("RELATIONUB.BOOKID", System.Data.DbType.Int32);            
        }
    }

    public class CustomerEntity
    {
        public virtual int Id { get; set; }

        public virtual string Name { get; set; }

        public virtual int BookId { get; set; }

        public virtual List<BookEntity> Customer_Book { get; set; }
    }

    public class CustomerMapping
    {
        public static IdQueryColumn _id;

        public static QueryColumn _name;

        public static QueryColumn _bookid;

        public static RelationQueryColumn _customer_book;

        static CustomerMapping()
        {
            _id = new IdQueryColumn("CUSTOMER.ID", System.Data.DbType.Int32, true);
            _name = new QueryColumn("CUSTOMER.NAME", System.Data.DbType.String);
            _bookid = new QueryColumn("CUSTOMER.BOOKID", System.Data.DbType.Int32);
            _customer_book = new RelationQueryColumn(_id, typeof (BookMapping), BookMapping._userid,
                                                     RelationType.ManyToMany);
        }
    }
}
